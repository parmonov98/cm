{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/TestComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","href","to","aria-hidden","Context","React","createContext","reducer","state","action","type","console","log","contacts","filter","contact","id","PAYLOAD","map","payload","Provider","dispatch","setState","axios","get","response","this","data","value","children","Component","Consumer","Contact","is_shown","DeleteonClick","a","delete","name","email","phone","onClick","style","marginLeft","cursor","bind","float","color","marginRight","Contacts","Fragment","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","res","history","push","EditContact","updateContact","match","params","put","item","TestComponent","posts","fetch","then","json","Object","keys","key","index","title","body","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7c4b4745.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  return (\n    <nav className=\"navbar navbar-expand navbar-dark bg-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">Contact manager</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            \n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fa fa-home mr-1\" aria-hidden=\"true\"></i>\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fa fa-plus mr-1\" aria-hidden=\"true\"></i>\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fa fa-info mr-1\" aria-hidden=\"true\"></i>\n                About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/test\" className=\"nav-link\">\n              <i className=\"fa fa-info mr-1\" aria-hidden=\"true\"></i>\n                Test\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\n\nexport default Header;","import React, { Component } from 'react'\n// import context from 'react-bootstrap/esm/AccordionContext';\nimport axios from \"axios\";\n\n\nconst Context = React.createContext();\n\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      console.log('delete action is called');\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.PAYLOAD)\n      }\n      break;\n    case 'ADD_CONTACT':\n      console.log('add action is called');\n      return {\n        ...state,\n        contacts: [action.PAYLOAD, ...state.contacts]\n      }\n    case 'UPDATE_CONTACT':\n      console.log('edit action is called');\n      return {\n        ...state,\n        contacts: state.contacts.map( contact => contact.id === action.payload.id ? (contact = action.payload) : contact = contact)\n      }\n      break;\n  \n    default:\n      break;\n  }\n}\n\nexport class Provider extends Component {\n  state ={\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n \n  async componentDidMount(){\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({contacts: response.data});\n  }\n  \n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n\n\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\n\nclass Contact extends Component {\n  static propTypes = {\n    contact: PropTypes.object.isRequired   ,\n    // deleteClickHandler: PropTypes.func.isRequired\n  };\n  state = {\n    is_shown: true\n  };\n  \n\n  \n  // ShowonClick = () => {\n  //   this.setState({is_shown: !this.state.is_shown });\n  //   console.log(this.state);\n  // };\n  \n  DeleteonClick = async (id, dispatch) => {\n    console.log('delete btn clicked');\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({type: 'DELETE_CONTACT', PAYLOAD: id});\n\n    // this.props.deleteClickHandler();\n  };\n\n  // ShowonClick = (id, name,  e) => {\n  //   console.log(id);\n  //   console.log(this.state);\n  //   console.log(e.target);\n  //   console.log(name);\n  // }\n\n  \n  render() {\n    const {id, name, email, phone} = this.props.contact;\n    const {is_shown} = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const {dispatch} = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h3>{name} \n                <i onClick={\n                  () => this.setState({is_shown: !this.state.is_shown })\n                } className='fa fa-sort-desc' style={{marginLeft: '5px', cursor: 'pointer'}} aria-hidden=\"true\"></i>\n                <i onClick={this.DeleteonClick.bind(this, id, dispatch)} className=\"fa fa-trash\" style={{float: 'right', color: '#c02', cursor: 'pointer'}} aria-hidden=\"true\"></i>\n                <Link to={`contact/edit/${id}`} style={{float: 'right', marginRight: '5px', cursor: 'pointer'}}>\n                  <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n                </Link>\n              </h3>\n              {is_shown ? (\n                <ul className=\"list-group\">\n                <li className=\"list-group-item\">Email: {email}</li>\n                <li className=\"list-group-item\">Phone: {phone}</li>\n              </ul>\n              ): null}\n              \n            </div>\n          );\n        }}\n      </Consumer>\n    );\n    \n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react'\nimport Contact from './Contact'\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n\n  constructor(){\n    super();\n  }\n\n  // deleteContact = (id) => {\n  //   console.log(`log from Contacts components for ${id}` );\n  //   const {contacts} = this.state;\n\n  //   const newContacts = contacts.filter(contact => contact.id !== id);\n\n  //   this.setState({\n  //     contacts: newContacts\n  //   });\n\n  // }\n  \n  render() {\n\n    return (\n      <Consumer>\n        {value => {\n          console.log(value);\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h2 className=\"display-4 mb-3\">\n              Contacts\n              </h2>\n              {contacts.map(contact => (\n                <Contact \n                      key={contact.id} \n                      contact={contact} \n                        \n                />\n              ))}\n\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n\n  }\n}\n\nexport default Contacts;","import React, { Component } from 'react'\nimport PropTypes from \"prop-types\";\n// import { propTypes } from 'react-bootstrap/esm/Image';\nimport classnames from \"classnames\";\n\n\nconst TextInputGroup = ({\n  label, name, value, placeholder, type, onChange, error\n}) => {\n  \n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"name\"> {label} </label>\n      <input \n        value={value} \n        onChange={onChange} \n        type={type} \n        name={name} \n        placeholder={placeholder}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n      \n    </div>\n  )\n\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport { Consumer } from \"../../context\";\n// import {v1 as uuid}  from 'uuid';\nimport TextInputGroup  from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n\n\n  \n  // onNameChange = (e) => this.setState( {name: e.target.value} );\n  // onEmailChange = (e) => this.setState( {email: e.target.value} );\n  // onPhoneChange = (e) => this.setState( {phone: e.target.value} );\n\n  onChange = e => this.setState(\n    {\n      [e.target.name]: e.target.value\n    }\n  );\n\n\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    console.log(this.state);\n\n    const {name, email, phone} = this.state;\n\n    if (name === '') {\n      this.setState({errors: {name: 'Name must be yours and required!'}});\n      return;\n    }\n    if (email === '') {\n      this.setState({errors: {email: 'Email must valid and required!'}});\n      return;\n    }\n    if (phone === '') {\n      this.setState({errors: {phone: 'Phone number would not be extra!'}});\n      return;\n    }\n\n\n\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n\n    try {\n      const res = await axios.post(`https://jsonplaceholder.typicode.com/users`, newContact);\n      dispatch({type: 'ADD_CONTACT', PAYLOAD: res.data});\n    \n    } catch (error) {\n      console.log(error);\n    }\n    \n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    this.props.history.push('/');\n    \n  }\n\n\n  render() {\n\n\n    const {name, email, phone, errors} = this.state;\n\n\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div>\n              <div className=\"card-header h2\">\n                Add contact form\n              </div>        \n              <div className=\"card card-body mb-3\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name:\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    onChange={this.onChange}\n                    value={name}\n                    error={errors.name}\n                  />\n                  \n                  <TextInputGroup\n                    label=\"Email:\"\n                    name=\"email\"\n                    placeholder=\"Enter email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={email}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone:\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    type=\"phone\"\n                    onChange={this.onChange}\n                    value={phone}\n                    error={errors.phone}\n                  />\n                  \n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-primary\"/>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n    \n  \n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react'\nimport { Consumer } from \"../../context\";\n// import {v1 as uuid}  from 'uuid';\nimport TextInputGroup  from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\nimport Contact from './Contact';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onChange = e => this.setState(\n    {\n      [e.target.name]: e.target.value\n    }\n  );\n\n\n  async componentDidMount(){\n    const {id} = this.props.match.params;\n    console.log(id);\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n    console.log(res.data);\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    console.log(this.state);\n\n    const {name, email, phone} = this.state;\n\n    if (name === '') {\n      this.setState({errors: {name: 'Name must be yours and required!'}});\n      return;\n    }\n    if (email === '') {\n      this.setState({errors: {email: 'Email must valid and required!'}});\n      return;\n    }\n    if (phone === '') {\n      this.setState({errors: {phone: 'Phone number would not be extra!'}});\n      return;\n    }\n\n\n    const updateContact = {\n      name, email, phone\n    };\n\n    const {id} = this.props.match.params;\n\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n    dispatch({\n      type: 'UPDATE_CONTACT', payload: res.data\n    })\n\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    })\n\n    this.props.history.push('/');\n    \n  }\n\n\n  render() {\n\n\n    const {name, email, phone, errors} = this.state;\n\n\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div>\n              <div className=\"card-header h2\">\n                Edit contact form\n              </div>        \n              <div className=\"card card-body mb-3\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name:\"\n                    name=\"name\"\n                    placeholder=\"Enter name\"\n                    onChange={this.onChange}\n                    value={name}\n                    error={errors.name}\n                  />\n                  \n                  <TextInputGroup\n                    label=\"Email:\"\n                    name=\"email\"\n                    placeholder=\"Enter email\"\n                    type=\"email\"\n                    onChange={this.onChange}\n                    value={email}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone:\"\n                    name=\"phone\"\n                    placeholder=\"Enter phone\"\n                    type=\"phone\"\n                    onChange={this.onChange}\n                    value={phone}\n                    error={errors.phone}\n                  />\n                  \n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-primary\"/>\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n    \n  \n  }\n}\n\nexport default EditContact;","import React from \"react\";\n\n\nexport default (props) =>  {\n  \n  return (\n    <div>\n      <h1 className=\"display-4\">{props.match.params.item} </h1>\n      \n      <p className=\"lead\">\n        Simple app to manage your contacts\n      </p>\n\n      <p className=\"text-secondary\">Version: 1.0.0</p>\n    </div>\n  )\n\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 - Page not found!</h1>\n      <p className=\"lead\">Sorry! The page does not exist.</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass TestComponent extends Component {\n\n  state = {\n    posts: []\n  }\n  componentDidMount(){\n    console.log(1111);\n    fetch('https://jsonplaceholder.typicode.com/posts')\n          .then(response => response.json())\n          .then(data => {\n            console.log(data)\n            this.setState({\n              posts: data\n            });\n            \n\n          })\n  }\n\n  // componentDidUpdate(){\n  //   console.log(2222);\n  // }\n\n  \n  render() {\n    const {posts} = this.state;\n    return (\n      <div>\n        <h2>Posts</h2>\n\n        <div className=\"posts\">          \n            {}\n            { \n              Object.keys(posts).map((key, index) => {\n                return (\n                  <div className=\"card p-2 mb-2\" key={index}>\n                    <h3>{posts[key].title}</h3>\n                    <p>{posts[key].body}</p>\n                    {/* {console.log(posts[key].title)} */}\n                  </div>\n                )\n              })\n            }\n            \n          \n        </div>\n        \n      </div>\n    )\n  }\n}\n\nexport default TestComponent;","import React from 'react';\nimport { HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\n\nimport { Provider } from \"./context\";\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css';\n\nimport './App.css';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport TestComponent from './components/test/TestComponent';\n\n\n\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header/>\n          \n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 mx-auto\">\n                <Switch>\n                  {/* <AddContact/>\n                <Contacts /> */}\n                  <Route exact path=\"/\" component={Contacts} />\n                  <Route exact path=\"/contact/add\" component={AddContact} />\n                  <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n\n                  <Route exact path=\"/about\" component={About} />                  \n                  <Route exact path=\"/test\" component={TestComponent} />\n                  <Route component={NotFound}/>\n                </Switch>\n              </div>\n            </div>\n            \n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}