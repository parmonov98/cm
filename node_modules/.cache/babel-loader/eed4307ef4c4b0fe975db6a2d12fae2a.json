{"ast":null,"code":"var _jsxFileName = \"/home/dev/Documents/lessons/react - brad traversy/section7/src/context.js\";\nimport React, { Component } from 'react'; // import context from 'react-bootstrap/esm/AccordionContext';\n\nimport axios from \"axios\";\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      console.log('delete action is called');\n      return { ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.PAYLOAD)\n      };\n      break;\n\n    case 'ADD_CONTACT':\n      console.log('add action is called');\n      return { ...state,\n        contacts: [action.PAYLOAD, ...state.contacts]\n      };\n\n    case 'UPDATE_CONTACT':\n      console.log('edit action is called');\n      return { ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? contact = action.payload : contact = contact)\n      };\n      break;\n\n    default:\n      break;\n  }\n};\n\nexport class Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      dispatch: action => this.setState(state => reducer(state, action))\n    };\n  }\n\n  async componentDidMount() {\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({\n      contacts: response.data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Context.Provider, {\n      value: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nexport const Consumer = Context.Consumer;","map":{"version":3,"sources":["/home/dev/Documents/lessons/react - brad traversy/section7/src/context.js"],"names":["React","Component","axios","Context","createContext","reducer","state","action","type","console","log","contacts","filter","contact","id","PAYLOAD","map","payload","Provider","dispatch","setState","componentDidMount","response","get","data","render","props","children","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,OAAO,GAAGH,KAAK,CAACI,aAAN,EAAhB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,CAAeC,MAAf,CAAsBC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACQ,OAAvD;AAFL,OAAP;AAIA;;AACF,SAAK,aAAL;AACEN,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,QAAQ,EAAE,CAACJ,MAAM,CAACQ,OAAR,EAAiB,GAAGT,KAAK,CAACK,QAA1B;AAFL,OAAP;;AAIF,SAAK,gBAAL;AACEF,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,aAAO,EACL,GAAGJ,KADE;AAELK,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,CAAeK,GAAf,CAAoBH,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACU,OAAP,CAAeH,EAA9B,GAAoCD,OAAO,GAAGN,MAAM,CAACU,OAArD,GAAgEJ,OAAO,GAAGA,OAAzG;AAFL,OAAP;AAIA;;AAEF;AACE;AAvBJ;AAyBD,CA1BD;;AA4BA,OAAO,MAAMK,QAAN,SAAuBjB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCK,KADsC,GAC/B;AACLK,MAAAA,QAAQ,EAAE,EADL;AAELQ,MAAAA,QAAQ,EAAEZ,MAAM,IAAI,KAAKa,QAAL,CAAcd,KAAK,IAAID,OAAO,CAACC,KAAD,EAAQC,MAAR,CAA9B;AAFf,KAD+B;AAAA;;AAOtC,QAAMc,iBAAN,GAAyB;AACvB,UAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAN,CAAU,4CAAV,CAAvB;AACA,SAAKH,QAAL,CAAc;AAACT,MAAAA,QAAQ,EAAEW,QAAQ,CAACE;AAApB,KAAd;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKnB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKoB,KAAL,CAAWC,QADd,CADF;AAKD;;AAnBqC;AAsBxC,OAAO,MAAMC,QAAQ,GAAGzB,OAAO,CAACyB,QAAzB","sourcesContent":["import React, { Component } from 'react'\n// import context from 'react-bootstrap/esm/AccordionContext';\nimport axios from \"axios\";\n\n\nconst Context = React.createContext();\n\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      console.log('delete action is called');\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => contact.id !== action.PAYLOAD)\n      }\n      break;\n    case 'ADD_CONTACT':\n      console.log('add action is called');\n      return {\n        ...state,\n        contacts: [action.PAYLOAD, ...state.contacts]\n      }\n    case 'UPDATE_CONTACT':\n      console.log('edit action is called');\n      return {\n        ...state,\n        contacts: state.contacts.map( contact => contact.id === action.payload.id ? (contact = action.payload) : contact = contact)\n      }\n      break;\n  \n    default:\n      break;\n  }\n}\n\nexport class Provider extends Component {\n  state ={\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n \n  async componentDidMount(){\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n    this.setState({contacts: response.data});\n  }\n  \n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n\n\n\n"]},"metadata":{},"sourceType":"module"}